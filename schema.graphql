type Block @entity {
  id: ID!
  number: BigInt! @index(unique: true)
  hash: String
  timestamp: Date
  parentHash: String
  specVersion: Int
  stateRoot: String
  extrinsicsRoot: String
  fee: BigInt!
  extrinsics: [Extrinsic] @derivedFrom(field: "block")
  events: [Event] @derivedFrom(field: "block")
}

type Extrinsic @entity {
  id: ID!
  hash: String!
  block: Block!
  blockNumber: BigInt! @index(unique: false)
  index: Int!
  isSigned: Boolean
  signer: Account
  section: String
  method: String
  success: Boolean
}

type Event @entity {
  id: ID!
  block: Block!
  blockNumber: BigInt! @index(unique: false)
  index: Int!
  section: String
  method: String
  extrinsic: Extrinsic
}

type Transfer @entity {
  id: ID!
  from: Account!
  to: Account!
  value: BigInt!
  block: Block!
  blockNumber: BigInt!
  extrinsicIndex: Int
  eventIndex: Int!
}

type Account @entity {
  id: ID!
  balance: BigInt!
  extrinsics: [Extrinsic] @derivedFrom(field: "signer")
}

type Day @entity {
  id: ID!
  year: Int!
  month: Int!
  date: Int!
  extrinsics: Int!
  events: Int!
  transferCount: Int!
  transferAmount: BigInt!
}

type Deposit @entity {
  id: ID!
  to: Account!
  value: BigInt!
  block: Block!
  blockNumber: BigInt!
  extrinsicIndex: Int
  eventIndex: Int!
}

type AssetTransfer @entity {
  id: ID!
  block: Block!
  blockNumber: BigInt!
  extrinsicIndex: Int
  eventIndex: Int!
  asset: Asset!
  amount: BigInt!
  to: String!
  from: String!
}
type AssetAccount @entity {
  id: ID!
  account: String!
  asset: Asset!
  balance: BigInt!
}

type Asset @entity {
  id: ID!
  name: String!
  symbol: String!
  decimals: Int!
}
